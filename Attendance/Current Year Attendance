-- BR / 2023 / Current Year attendance
-- Depreciated 

declare @table table
  (
    entityID   varchar(4),
    studentID  int,
    otherID    varchar(10),
    lastName   varchar(30),
    firstName  varchar(30),
    grade      varchar(2),
    entryDate  date,
    wdDate     date,
    absences   int,
    schlDays   int
  )

insert into
  @table
select distinct
  ew.[entity-id],
  ew.[student-id],
  s.[other-id],
  n.[last-name],
  n.[first-name],
  g.grade,
  cast(ew.[ew-date] as date),
  cast(coalesce(dateadd(DD, 1,ew.[withdrawal-date]),getdate()) as date),

  (select
     count(distinct [date])
   from
     ala_attendanceDaily
   where
     schoolYear = 2023
     and studentID = ew.[student-id]
     and entityID = ew.[entity-id]
     and [date] between cast(ew.[ew-date] as date) and cast(coalesce(dateadd(DD, 1,ew.[withdrawal-date]),getdate()) as date)

     and dayStatus not in ('D','O','E','P','U','Y')),
 
    (select
       count(distinct [cal-date])
     from
       [calendar-day]
     where
       [entity-id] = ew.[entity-id]
       and [cal-days] = 1.00

     --and [cal-date] between cast(ew.[ew-date] as date) and cast(coalesce(dateadd(DD, 1,ew.[withdrawal-date]),getdate()) as date))

     --ADD 1 DAY TO WD DATE TO MATCH SKYWARD AND SUBTRACT 1 DAY FROM GETDATE SO IT DOESN'T COUNT TODAY WHEN ATT ISN'T UPDATED
       and [cal-date] between cast(ew.[ew-date] as date) and cast(coalesce(dateadd(DD, 1,ew.[withdrawal-date]),dateadd(DD,-1,getdate())) as date))

from
  [student-ew]           ew
  join student            s on s.[student-id] = ew.[student-id]
  join [name]             n on n.[name-id] = s.[name-id]
  join [student-entity]   e on e.[student-id] = ew.[student-id]
  join [ent-grd-gy-xref]  g on g.[school-year] = 2023 and g.[grad-yr] = cast(ew.[withdrawal-grad-yr] as int)
where
  ew.[withdrawal-school-year] in (0,2023)
  and ew.[entity-id] = '0431'
  and e.[x-default-entity] = 1

--select * from @table

select distinct
  otherID,
  lastName,
  firstName,
  grade,
  absences,
  schlDays,

  case
    when sum(absences) = 0 then 0
  else
    round((cast(sum(absences) as float) / cast(sum(schlDays) as float) * 100),2)
  end as 'absPct',

  case
    when sum(absences) = 0 then 100
  else
    100 - round((cast(sum(absences) as float) / cast(sum(schlDays) as float) * 100),2)
  end as 'attPct'

from
  @table
group by
  otherID,
  lastName,
  firstName,
  grade,
  absences,
  schlDays
orde
