set nocount on

declare @date date

declare day_cursor cursor FAST_FORWARD READ_ONLY for

select distinct
  cast([cal-date] as date)
from
  [calendar-day]
where
  [entity-id] < '0600'
  and [entity-id] not in ('0082','0400')
  and [cal-days] = 1.00
  and cast([cal-date] as date) between '2023-02-10' and '2023-02-10'
--Change date above to intended day of inspection
order by
  1

open day_cursor

fetch next from day_cursor into @date

while @@fetch_status = 0

  begin
 
  --====================================================================================================
declare @table table
(
  studentID varchar(7),
  entityID varchar(4),
  theDate  date
)

insert into
  @table
select distinct
   w.[student-id],
   w.[entity-id],
   @date

from
  [student-entity]       e
  join student           s on s.[student-id] = e.[student-id]
  join [name]            n on n.[name-id] = s.[name-id]
  join [student-ew]      w on w.[student-id] = e.[student-id] and w.[entity-id] = e.[entity-id] and (w.[withdrawal-school-year] = 2023 or (w.[withdrawal-school-year] = 0 and w.[ew-date] < '2023-12-15'))
  join [ent-grd-gy-xref] g on g.[school-year] = 2023 and g.[grad-yr] = cast(w.[withdrawal-grad-yr] as int)
  left join ala_activeStudents p on p.studentID = e.[student-id]
where
  cast(w.[ew-date] as date) between '2022-08-10' and '2023-02-15'
-- Keep first date 'start of school year' change 2nd date to after selected date
  and (cast(w.[withdrawal-date] as date) > @date or w.[withdrawal-date] is null)
  and e.[x-default-entity] = 1 -- USE WITHDRAWAL-DEFAULT-ENTITY FOR PAST YEARS
--and w.[entity-id] = '0031'
  and w.[entity-id] < '0600'
  and w.[entity-id] not in ('0082','0400')



--====================================================================================================

    fetch next from day_cursor into @date
 
  end

close      day_cursor
deallocate day_cursor

select
   t.studentID,
   t.entityID,
   @date
from
  @table      t
  join school s on s.[school-id] = t.entityID
