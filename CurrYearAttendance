set nocount on


declare @table table
  (
    entityID  varchar(4),
    studentID int,
    otherID   varchar(10),
    lastName  varchar(30),
    firstName varchar(30),
    grade     varchar(2),
	race      varchar(1),
    entryDate date,
    wdDate    date,
    absences  int,
    schlDays  int
  )

insert into
  @table
select distinct
  ew.[entity-id],
  ew.[student-id],
  s.[other-id],
  n.[last-name],
  n.[first-name],
  g.grade,
  n.[race-code],
  cast(ew.[ew-date] as date),
  cast(coalesce(dateadd(DD, 1,ew.[withdrawal-date]),getdate()) as date),

  (select
     count(distinct [date])
   from
     ala_attendanceDaily
   where
     schoolYear = 2023
     and studentID = ew.[student-id]
     and entityID = ew.[entity-id]
     and [date] between cast(ew.[ew-date] as date) and cast(coalesce(dateadd(DD, 1,ew.[withdrawal-date]),dateadd(DD,-1,getdate())) as date)
     and dayStatus in ('D','O','E','P','U','Y')),
  
  (select
     count(distinct [cal-date])
   from
     [calendar-day]
   where
     [entity-id] = ew.[entity-id]
     and [cal-days] = 1.00

   --add 1 day to wd date to match skyward and subtract 1 day from getdate so it doesnt count today when att isnt updated
     and [cal-date] between cast(ew.[ew-date] as date) and cast(coalesce(dateadd(DD, 1,ew.[withdrawal-date]),dateadd(DD,-1,getdate())) as date))

from
  [student-ew]           ew
  join student            s on s.[student-id] = ew.[student-id]
  join [name]             n on n.[name-id] = s.[name-id]
  join [student-entity]   e on e.[student-id] = ew.[student-id] and e.[entity-id] = ew.[entity-id]
  join [ent-grd-gy-xref]  g on g.[school-year] = 2023 and g.[grad-yr] = cast(ew.[withdrawal-grad-yr] as int)
where
  ew.[withdrawal-school-year] in (0,2023)
  and e.[x-default-entity] = 1
  and ew.[withdrawal-code] <> 'DNE'
  and ew.[entity-id] not in ('N998','0082','0400','0601','0991','3900','7004','7023','9001','9025','9997')

--and ew.[entity-id] = '0431'

select distinct
  t.entityID,
  s.[school-name] as 'entityName',
  t.otherID,
  t.lastName,
  t.firstName,
  t.grade,
  t.race,
  t.absences,
  t.schlDays,

  case
    when sum(t.absences) = 0 then 0
  else
          round((cast(sum(t.absences) as float) / cast(sum(t.schlDays) as float) * 100),2)
  end as 'absPct',

  case
    when sum(t.absences) = 0 then 100
  else
    100 - round((cast(sum(t.absences) as float) / cast(sum(t.schlDays) as float) * 100),2)
  end as 'attPct'

from
  @table      t
  join school s on s.[school-id] = t.entityID
group by
  t.entityID,
  s.[school-name],
  t.otherID,
  t.lastName,
  t.firstName,
  t.grade,
  t.race,
  t.absences,
  t.schlDays
order by
  1,6,4,5
